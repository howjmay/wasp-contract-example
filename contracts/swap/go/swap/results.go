// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the schema definition file instead

package swap

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type ImmutableSetPriceResults struct {
	Proxy wasmtypes.Proxy
}

func (s ImmutableSetPriceResults) Price() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultPrice))
}

type MutableSetPriceResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableSetPriceResults() MutableSetPriceResults {
	return MutableSetPriceResults{Proxy: wasmlib.NewResultsProxy()}
}

func (s MutableSetPriceResults) Price() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultPrice))
}

type ImmutableGetPriceResults struct {
	Proxy wasmtypes.Proxy
}

func (s ImmutableGetPriceResults) Price() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultPrice))
}

type MutableGetPriceResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetPriceResults() MutableGetPriceResults {
	return MutableGetPriceResults{Proxy: wasmlib.NewResultsProxy()}
}

func (s MutableGetPriceResults) Price() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultPrice))
}
