// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the schema definition file instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use swap::*;
use crate::*;

const EXPORT_MAP: ScExportMap = ScExportMap {
    names: &[
        FUNC_CALL_FOR_PRICE,
    ],
    funcs: &[
        func_call_for_price_thunk,
    ],
    views: &[
    ],
};

pub fn on_dispatch(index: i32) {
    EXPORT_MAP.dispatch(index);
}

pub struct CallForPriceContext {
    pub results: MutableCallForPriceResults,
    pub state:   MutableswapState,
}

fn func_call_for_price_thunk(ctx: &ScFuncContext) {
    ctx.log("swap.funcCallForPrice");
    let f = CallForPriceContext {
        results: MutableCallForPriceResults::new(),
        state:   MutableswapState::new(),
    };
    func_call_for_price(ctx, &f);
    ctx.results(&f.results.proxy);
    ctx.log("swap.funcCallForPrice ok");
}
