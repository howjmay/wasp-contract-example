// Code generated by schema tool; DO NOT EDIT.

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use recorder::*;
use crate::*;

const EXPORT_MAP: ScExportMap = ScExportMap {
    names: &[
        FUNC_UPDATE_PRICE,
        VIEW_GET_PRICE,
    ],
    funcs: &[
        func_update_price_thunk,
    ],
    views: &[
        view_get_price_thunk,
    ],
};

pub fn on_dispatch(index: i32) {
    EXPORT_MAP.dispatch(index);
}

pub struct UpdatePriceContext {
    pub events:  RecorderEvents,
    pub results: MutableUpdatePriceResults,
}

fn func_update_price_thunk(ctx: &ScFuncContext) {
    ctx.log("recorder.funcUpdatePrice");
    let f = UpdatePriceContext {
        events:  RecorderEvents {},
        results: MutableUpdatePriceResults::new(),
    };
    func_update_price(ctx, &f);
    ctx.results(&f.results.proxy);
    ctx.log("recorder.funcUpdatePrice ok");
}

pub struct GetPriceContext {
    pub results: MutableGetPriceResults,
}

fn view_get_price_thunk(ctx: &ScViewContext) {
    ctx.log("recorder.viewGetPrice");
    let f = GetPriceContext {
        results: MutableGetPriceResults::new(),
    };
    view_get_price(ctx, &f);
    ctx.results(&f.results.proxy);
    ctx.log("recorder.viewGetPrice ok");
}
