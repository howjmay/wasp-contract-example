// Code generated by schema tool; DO NOT EDIT.

package recorder

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

var recorderHandlers = map[string]func(*RecorderEventHandlers, *wasmtypes.WasmDecoder){
	"recorder.priceHistory": func(evt *RecorderEventHandlers, dec *wasmtypes.WasmDecoder) { evt.onRecorderPriceHistoryThunk(dec) },
}

type RecorderEventHandlers struct {
	myID uint32
	priceHistory func(e *EventPriceHistory)
}

var _ wasmlib.IEventHandlers = new(RecorderEventHandlers)

func NewRecorderEventHandlers() *RecorderEventHandlers {
	return &RecorderEventHandlers{ myID: wasmlib.EventHandlersGenerateID() }
}

func (h *RecorderEventHandlers) CallHandler(topic string, dec *wasmtypes.WasmDecoder) {
	handler := recorderHandlers[topic]
	if handler != nil {
		handler(h, dec)
	}
}

func (h *RecorderEventHandlers) ID() uint32 {
	return h.myID
}

func (h *RecorderEventHandlers) OnRecorderPriceHistory(handler func(e *EventPriceHistory)) {
	h.priceHistory = handler
}

type EventPriceHistory struct {
	Timestamp uint64
	Price uint64
}

func (h *RecorderEventHandlers) onRecorderPriceHistoryThunk(dec *wasmtypes.WasmDecoder) {
	if h.priceHistory == nil {
		return
	}
	e := &EventPriceHistory{}
	e.Timestamp = wasmtypes.Uint64Decode(dec)
	e.Price = wasmtypes.Uint64Decode(dec)
	dec.Close()
	h.priceHistory(e)
}
